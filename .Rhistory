shinyApp(ui = ui , server = server)
display_grid(myGridTemplate)
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeLogo", "appPurposeTitle", "leafletMap"),
c("howToUseInfo", "leafletMap")
),
cols_width = c("400px", "200px", "1fr"),
rows_height = c("50px", "auto", "200px")
),
mobile = list(
areas = rbind(
"title",
"info",
"map",
"user",
"map1"
),
rows_height = c("50px", "100px", "auto", "200px"),
cols_width = c("100%")
)
)
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "gap", "leafletMap"),
c("appPurposeLogo", "appPurposeTitle", "leafletMap"),
c("howToUseInfo", "gap",  "leafletMap")
),
cols_width = c("400px", "200px", "1fr"),
rows_height = c("50px", "auto", "200px")
),
mobile = list(
areas = rbind(
"title",
"info",
"map",
"user",
"map1"
),
rows_height = c("50px", "100px", "auto", "200px"),
cols_width = c("100%")
)
)
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "gap", "leafletMap"),
c("appTitle", "gap", "leafletMap"),
c("appPurposeLogo", "appPurposeTitle", "leafletMap"),
c("howToUseInfo", "gap",  "leafletMap")
),
cols_width = c("400px", "200px", "1fr"),
rows_height = c("50px", "auto", "200px")
),
mobile = list(
areas = rbind(
"title",
"info",
"map",
"user",
"map1"
),
rows_height = c("50px", "100px", "auto", "200px"),
cols_width = c("100%")
)
)
display_grid(myGridTemplate)
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "gap", "leafletMap"),
c("appTitle", "gap", "leafletMap"),
c("appPurposeLogo", "appPurposeTitle", "leafletMap"),
c("howToUseInfo", "gap",  "leafletMap")
),
cols_width = c("400px", "200px", "auto"),
rows_height = c("50px", "auto", "200px")
)
)
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "gap", "leafletMap"),
c("appTitle", "gap", "leafletMap"),
c("appPurposeLogo", "appPurposeTitle", "leafletMap"),
c("howToUseInfo", "gap",  "leafletMap")
),
cols_width = c("400px", "200px", "auto"),
rows_height = c("50px", "auto", "200px")
)
)
display_grid(myGridTemplate)
?grid_template
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatistics", "leafletMap"),
c("contactInfo", "leafletMap")
),
cols_width = c("400px",  "auto"),
rows_height = c("50px", "auto")
)
)
display_grid(myGridTemplate)
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatistics", "leafletMap"),
c("contactInfo", "leafletMap")
),
cols_width = c("700px",  "auto"),
rows_height = c("50px", "50px", "800px", "100px", "auto")
)
)
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatistics", "leafletMap"),
c("contactInfo", "leafletMap")
),
cols_width = c("700px",  "auto"),
rows_height = c("50px", "50px", "800px", "100px", "auto")
)
)
display_grid(myGridTemplate)
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatisticsBlank", "shipStatistics"),
c("contactInfo", "contactInfo")
),
cols_width = c("700px",  "auto"),
rows_height = c("50px", "50px", "900px", "200px", "auto")
)
)
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatisticsBlank", "shipStatistics"),
c("contactInfo", "contactInfo")
),
cols_width = c("700px",  "auto"),
rows_height = c("50px", "50px", "900px", "200px", "auto")
)
)
display_grid(myGridTemplate)
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatisticsBlank", "shipStatistics"),
c("contactInfo", "contactInfo")
),
cols_width = c("700px",  "auto"),
rows_height = c("50px", "50px", "600px", "200px", "auto")
)
)
display_grid(myGridTemplate)
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatisticsBlank", "shipStatistics"),
c("contactInfo", "contactInfo")
),
cols_width = c("700px",  "auto"),
rows_height = c("50px", "50px", "800px", "300px", "auto")
)
)
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
display_grid(myGridTemplate)
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatisticsBlank", "shipStatistics"),
c("contactInfo", "contactInfo")
),
cols_width = c("700px",  "auto"),
rows_height = c("50px", "50px", "800px", "250px", "auto")
)
)
display_grid(myGridTemplate)
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatisticsBlank", "shipStatistics"),
c("contactInfo", "contactInfo")
),
cols_width = c("700px",  "auto"),
rows_height = c("50px", "50px", "800px", "210px", "auto")
)
)
display_grid(myGridTemplate)
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatisticsBlank", "shipStatistics"),
c("contactInfo", "contactInfo")
),
cols_width = c("700px",  "auto"),
rows_height = c("50px", "50px", "800px", "250px", "auto")
)
)
display_grid(myGridTemplate)
myGridTemplate <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatisticsBlank", "shipStatistics"),
c("contactInfo", "contactInfo")
),
cols_width = c("700px",  "auto"),
rows_height = c("50px", "50px", "800px", "250px", "auto")
),
mobile = list(
areas = rbind(
"appLogo",
"appTitle",
"appPurposeInfo",
"leafletMap",
"shipStatistics",
"contactInfo",
"shipStatisticsBlank"
),
row_height = c("20px", "30px", "150px", "200px", "100px", "20px", "auto"),
cols_width = c("100%")
)
)
display_grid(myGridTemplate)
runApp()
runApp()
runApp()
gridTemplateMarineData <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "gap", "leafletMap"),
c("appTitle", "gap", "leafletMap"),
c("appPurposeInfo", "gap", "leafletMap"),
c("shipStatisticsBlank", "gap",  "shipStatistics"),
c("contactInfo", "gap", "contactInfo")
),
cols_width = c("300px", "200px",  "auto"),
rows_height = c("50px", "50px", "800px", "250px", "auto")
),
mobile = list(
areas = rbind(
"appLogo",
"gap",
"appTitle",
"appPurposeInfo",
"leafletMap",
"shipStatistics",
"contactInfo",
"shipStatisticsBlank"
),
row_height = c("20px", "20px", "30px", "150px", "200px", "100px", "20px", "auto"),
cols_width = c("100%")
)
)
display_grid(gridTemplateMarineData)
runApp()
gridTemplateMarineData <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "gap", "leafletMap"),
c("appTitle", "gap", "leafletMap"),
c("appPurposeInfo", "gap", "leafletMap"),
c("shipStatisticsBlank", "gap",  "shipStatistics"),
c("contactInfo", "gap", "contactInfo")
),
cols_width = c("300px", "200px",  "auto"),
rows_height = c("50px", "50px", "800px", "250px", "auto")
),
mobile = list(
areas = rbind(
c("appLogo", "gap"),
c("appTitle", "gap"),
c("appPurposeInfo", "gap"),
c("leafletMap", "gap"),
c("shipStatistics", "gap"),
c("contactInfo", "gap"),
c("shipStatisticsBlank", "gap")
),
row_height = c("20px", "30px", "150px", "200px", "100px", "20px", "auto"),
cols_width = c("90%", "10%")
)
)
display_grid(gridTemplateMarineData)
runApp()
runApp()
runApp()
?renderImage
runApp()
normalizePath(file.path("images/logo.jpg"))
runApp()
View(cleaned_data)
~
~
runApp()
runApp()
runApp()
install.packages("semanticDashboard")
library(semanticDashboard)
installed.packages(semantic.dashboard)
installed.packages("semantic.dashboard")
install.packages("semantic.dashboard")
library(semantic.dashboard)
runApp()
runApp()
runApp()
insta
install.packages("semntic.dashboard")
install.packages("semantic.dashboard")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?dashboard_page
runApp()
runApp()
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
runApp()
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
library(shiny.semantic)
runApp('C:/Users/Aarsh/Desktop/testSemanticGrid')
runApp()
rm(list = ls())
source('C:/Users/Aarsh/Desktop/appsilonRShinyTaskAarshBatraVersion2/shinyTaskMasterScript.R')
runApp()
runApp()
display(gridTemplateMarineData)
gridTemplateMarineData <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatisticsBlank", "shipStatistics"),
c("contactInfo", "contactInfo")
),
cols_width = c("300px",  "auto"),
rows_height = c("50px", "50px", "800px", "250px", "auto")
),
mobile = list(
areas = rbind(
"appLogo",
"appTitle",
"appPurposeInfo",
"leafletMap",
"shipStatistics",
"contactInfo",
"shipStatisticsBlank"
),
row_height = c("20px", "30px", "150px", "200px", "100px", "20px", "auto"),
cols_width = c("100%")
)
)
display(gridTemplateMarineData)
runApp()
runApp()
runApp()
runApp()
runApp()
gridTemplateMarineData <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatisticsBlank", "shipStatistics"),
c("contactInfo", "contactInfo")
),
cols_width = c("300px",  "auto"),
rows_height = c("50px", "50px", "800px", "250px", "auto")
),
mobile = list(
areas = rbind(
"appLogo",
"appTitle",
"appPurposeInfo",
"leafletMap",
"shipStatistics",
"contactInfo",
"shipStatisticsBlank"
),
row_height = c("20px", "30px", "150px", "200px", "100px", "20px", "auto"),
cols_width = c("100%")
)
)
gridTemplateMarineData <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatisticsBlank", "shipStatistics"),
c("contactInfo", "contactInfo")
),
cols_width = c("300px",  "auto"),
rows_height = c("50px", "50px", "800px", "250px", "auto")
),
mobile = list(
areas = rbind(
"appLogo",
"appTitle",
"appPurposeInfo",
"leafletMap",
"shipStatistics",
"contactInfo",
"shipStatisticsBlank"
),
row_height = c("20px", "30px", "150px", "200px", "100px", "20px", "auto"),
cols_width = c("100%")
)
)
display_grid(gridTemplateMarineData)
gridTemplateMarineData <- shiny.semantic::grid_template(
default = list(
areas = rbind(
c("appLogo", "leafletMap"),
c("appTitle", "leafletMap"),
c("appPurposeInfo", "leafletMap"),
c("shipStatisticsBlank", "shipStatistics"),
c("contactInfo", "contactInfo")
),
cols_width = c("300px",  "auto"),
rows_height = c("200px", "50px", "600px", "250px", "auto")
),
mobile = list(
areas = rbind(
"appLogo",
"appTitle",
"appPurposeInfo",
"leafletMap",
"shipStatistics",
"contactInfo",
"shipStatisticsBlank"
),
row_height = c("20px", "30px", "150px", "200px", "100px", "20px", "auto"),
cols_width = c("100%")
)
)
display_grid(gridTemplateMarineData)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('C:/Users/Aarsh/Desktop/appsilonRShinyTaskAarshBatraVersion2/shinyTaskMasterScript.R')
source('C:/Users/Aarsh/Desktop/appsilonRShinyTaskAarshBatraVersion2/shinyTaskMasterScript.R')
runApp()
runApp()
library(pryr)
mem_used()
rm(raw_data)
mem_used()
# loading the .RData file that contain all required data objects
save(list = ls(all = TRUE), file= "all.RData")
rm(list = ls())
# loading the .RData file that contain all required data objects
# save(list = ls(all = TRUE), file= "all.RData")
load("all.RData", .GlobalEnv)
runApp()
